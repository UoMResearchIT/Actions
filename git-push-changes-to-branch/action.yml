# Copyright (c) 2025 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Push Changes to Git Branch
description: >
  Detects if there are changes; if there are, commits them to a new branch.
author: Donal Fellows, Andrew Rowley, Douglas Lowe
branding:
  color: gray-dark
  icon: git-commit
inputs:
  working-directory:
    description: >
      Which working directory to look at.
      Defaults to the base directory.
    default: ${{ github.workspace }}
  branch-prefix:
    description: >
      Prefix of the branch name to use.
      You should change this!
    default: autocommit
  token:
    description: >
      Access token used for writing the new branch to the repository.
    default: ${{ github.token }}
  commit-message:
    description: >
      The commit message to use.
    default: >
      Changes generated by workflow
  commit-user-name:
    description: >
      The name of the user to ascribe the commit to.
    default: GitHub Actions
  commit-user-email:
    description: >
      The email address of the user to ascribe the commit to.
    default: no-reply@github.com
outputs:
  branch:
    description: >
      The name of the branch that may have been created.
    value: ${{ steps.name.outputs.branch }}
  changed:
    description: >
      Whether there were any changes committed.
    value: ${{ steps.detect.outputs.changed }}
runs:
  using: composite
  steps:
    - name: make branch name
      id: name
      run: |
        NOW=$(date +'%Y-%m-%d-%H-%M-%S')
        echo "branch=$PREFIX-$GITHUB_HEAD_REF-$NOW" >> $GITHUB_OUTPUT
      shell: bash
      env:
        PREFIX: ${{ inputs.branch-prefix }}
    - name: detect changes
      id: detect
      working-directory: ${{ inputs.working-directory }}
      run: |
        set +e
        git diff --quiet
        CHANGED_FILES=$?
        NEW_FILES=$(git ls-files . --exclude-standard --others | wc -l)
        if [ $CHANGED_FILES -eq 1 ] || [ $NEW_FILES -ne 0 ]; then
          echo "changed=1" >> $GITHUB_OUTPUT
        else
          echo "changed=0" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: configure git
      if: steps.detect.outputs.changed == 1
      run: |
        git config --global user.email $USER_EMAIL
        git config --global user.name $USER_NAME
      shell: bash
      env:
        USER_NAME: ${{ inputs.commit-user-name }}
        USER_EMAIL: ${{ inputs.commit-user-email }}
    - name: push changes
      if: steps.detect.outputs.changed == 1
      working-directory: ${{ inputs.working-directory }}
      run: |
        git checkout -b $NEW_BRANCH
        git add -A
        git commit -a -m $MESSAGE
        git push origin $NEW_BRANCH
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.token }}
        NEW_BRANCH: ${{ steps.name.outputs.branch }}
        MESSAGE: ${{ inputs.commit-message }}
