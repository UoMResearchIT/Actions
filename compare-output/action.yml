name: Compare program output to a string
description: >
  Compare the output of a program to a string given as a parameter.
  A single trailing newline will be ignored.
inputs:
  command:
    description: The command to get the output of for comparison.
    required: true
  expected:
    description: The string that the output is expected to equal.
    required: true
  init:
    description: Extra initialisation code to run before the command to compare.
    required: false
  shell:
    description: >
      Which shell to use to run the program.
      May be 'bash', 'pwsh', or 'auto' (default) to pick based on the runner's platform.
    required: false
    default: auto
  working-directory:
    description: >
      The working directory to run in.
      Defaults to the job's main working directory.
    required: false
    default: .

runs:
  using: composite
  steps:
    - shell: bash
      if: inputs.shell == 'bash' || (inputs.shell == 'auto' && runner.os != 'Windows')
      id: bash
      run: |
        bash $GITHUB_ACTION_PATH/compare.bash
      env:
        COMMAND: ${{ inputs.command }}
        EXPECTED: ${{ inputs.expected }}
        INIT: ${{ inputs.init }}
      working-directory: ${{ inputs.working-directory }}
    - shell: pwsh
      if: inputs.shell == 'pwsh' || (inputs.shell == 'auto' && runner.os == 'Windows')
      id: pwsh
      run: |
        & $env:GITHUB_ACTION_PATH/compare.ps1
      env:
        COMMAND: ${{ inputs.command }}
        EXPECTED: ${{ inputs.expected }}
        INIT: ${{ inputs.init }}
      working-directory: ${{ inputs.working-directory }}
    - shell: bash
      if: steps.bash.outcome == 'failure' || steps.pwsh.outcome == 'failure'
      run: |
        echo "::error title=Output unexpected::$COMMAND"
      env:
        COMMAND: ${{ inputs.command }}
