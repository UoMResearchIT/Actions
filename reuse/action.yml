# Copyright (c) 2025 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'REUSE Compliance Check'
description: "Check your project's REUSE compliance for clear and simple licensing and copyright!"
author: 'Free Software Foundation Europe (FSFE), University of Manchester'
inputs:
  args:
    description: "The arguments to pass to the reuse-tool"
    required: true
  branch:
    description: "The branch or tag to check out the reuse-tool from"
    required: false
    default: "main"
  python-version:
    description: "The version of Python to run the reuse-tool in."
    required: false
    default: "3.12"
  poetry-version:
    description: "The version of Poetry to install the reuse-tool with."
    required: false
    default: "1.3.0"
runs:
  using: composite
  steps:
  - name: Checkout
    uses: actions/checkout@v5
    with:
      path: reuse-tool
      repository: UoMResearchIT/reuse-tool
      ref: ${{ inputs.branch }}

  - name: Setup Python
    uses: actions/setup-python@v6.0.0
    id: setup-python
    with:
      python-version: ${{ inputs.python-version}}

  - name: Clear Problem Matcher
    run: echo '::remove-matcher owner=python::'
    shell: bash

  - name: Restore Cache
    uses: actions/cache/restore@v4.3.0
    id: cache-venv
    with:
      path: reuse-tool-venv
      key: setup-venv-${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-${{ steps.setup-python.outputs.python-path }}-reuse-${{ inputs.branch }}-${{ hashFiles('reuse-tool/pyproject.toml', 'reuse-tool/src/**/*.py') }}

  - name: Create reuse-tool Environment
    run: python -m venv reuse-tool-venv
    if: steps.cache-venv.outputs.cache-hit != 'true'
    shell: bash

  - name: Enable reuse-tool Environment
    run: |
      source reuse-tool-venv/${SCRIPT_DIR}/activate
      echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
      echo "${VIRTUAL_ENV}/${SCRIPT_DIR}" >> $GITHUB_PATH
    shell: bash
    env:
      SCRIPT_DIR: ${{ runner.os == 'Windows' && 'Scripts' || 'bin' }}

  - name: Setup reuse-tool Environment
    run: |
      pip install "poetry~=$USE_POETRY_VERSION"
      cd reuse-tool
      poetry install --no-interaction --only main
      poetry build --no-interaction
      pip install dist/*.whl
    if: steps.cache-venv.outputs.cache-hit != 'true'
    shell: bash
    env:
      USE_POETRY_VERSION: ${{ inputs.poetry-version }}

  - name: Save Cache
    uses: actions/cache/save@v4.3.0
    with:
      path: reuse-tool-venv
      key: ${{ steps.cache-venv.outputs.cache-primary-key }}
    if: steps.cache-venv.outputs.cache-hit != 'true'

  - name: Run reuse
    shell: bash
    run: |
      source reuse-tool-venv/bin/activate
      reuse ${{ inputs.args }}
